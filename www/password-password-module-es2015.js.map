{"version":3,"sources":["./src/app/password/password.page.html","./src/app/password/password.module.ts","./src/app/password/password.page.scss","./src/app/password/password.page.ts"],"names":[],"mappings":"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","file":"password-password-module-es2015.js","sourcesContent":["module.exports = \"<ion-header no-border>\\r\\n  <ion-toolbar mode=\\\"ios\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button mode=\\\"md\\\" icon=\\\"assets/icon/icon-back.svg\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      <img src=\\\"assets/imgs/logo.png\\\" id=\\\"header_logo\\\" height=\\\"40\\\" alt=\\\"\\\">\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <ion-item lines=\\\"none\\\" class=\\\"form-control-label\\\">\\r\\n    <ion-label class=\\\"ion-text-wrap\\\">Password</ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item lines=\\\"none\\\" class=\\\"input_box\\\">\\r\\n    <ion-label>\\r\\n      <ion-icon name=\\\"lock\\\"></ion-icon>\\r\\n    </ion-label>\\r\\n    <ion-input type=\\\"password\\\" value=\\\"\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item lines=\\\"none\\\" class=\\\"form-control-label no-margin-top\\\">\\r\\n    <ion-label class=\\\"ion-text-wrap\\\">Confirm Password</ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item lines=\\\"none\\\" class=\\\"input_box\\\">\\r\\n    <ion-label>\\r\\n      <ion-icon name=\\\"lock\\\"></ion-icon>\\r\\n    </ion-label>\\r\\n    <ion-input type=\\\"password\\\" value=\\\"\\\" [(ngModel)]=\\\"confirmPassword\\\"></ion-input>\\r\\n  </ion-item>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer no-border>\\r\\n  <ion-button expand=\\\"full\\\" class=\\\"button-green\\\" color=\\\"button_color\\\" (click)=\\\"goToName()\\\">NEXT</ion-button>\\r\\n</ion-footer>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PasswordPage } from './password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PasswordPage]\r\n})\r\nexport class PasswordPageModule {}\r\n","module.exports = \"/*********  header ************/\\nion-title {\\n  padding-top: 10px;\\n}\\nion-title .md .title-md .hydrated {\\n  text-align: center !important;\\n}\\nion-content {\\n  --overflow: hidden;\\n}\\nion-item {\\n  --padding-start: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFzc3dvcmQvRDpcXFdvcmtcXE1vYmlsZVxcaW9uaWNcXGFiYWNfcGFyZW50cy9zcmNcXGFwcFxccGFzc3dvcmRcXHBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFzc3dvcmQvcGFzc3dvcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtCQUFBO0FBQ0E7RUFDRSxpQkFBQTtBQ0NGO0FEQ0U7RUFDRSw2QkFBQTtBQ0NKO0FER0E7RUFDRSxrQkFBQTtBQ0FGO0FER0E7RUFDRSwrQkFBQTtBQ0FGIiwiZmlsZSI6InNyYy9hcHAvcGFzc3dvcmQvcGFzc3dvcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqKioqKioqKiAgaGVhZGVyICoqKioqKioqKioqKi9cclxuaW9uLXRpdGxlIHtcclxuICBwYWRkaW5nLXRvcDogMTBweDtcclxuXHJcbiAgLm1kIC50aXRsZS1tZCAuaHlkcmF0ZWQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5pb24tY29udGVudCB7XHJcbiAgLS1vdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG5pb24taXRlbSB7XHJcbiAgLS1wYWRkaW5nLXN0YXJ0OiAwcHggIWltcG9ydGFudDtcclxufSIsIi8qKioqKioqKiogIGhlYWRlciAqKioqKioqKioqKiovXG5pb24tdGl0bGUge1xuICBwYWRkaW5nLXRvcDogMTBweDtcbn1cbmlvbi10aXRsZSAubWQgLnRpdGxlLW1kIC5oeWRyYXRlZCB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xufVxuXG5pb24tY29udGVudCB7XG4gIC0tb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuaW9uLWl0ZW0ge1xuICAtLXBhZGRpbmctc3RhcnQ6IDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { User } from './../../interfaces';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AlertMessageService } from '../services/alert-message.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-password',\r\n  templateUrl: './password.page.html',\r\n  styleUrls: ['./password.page.scss'],\r\n})\r\nexport class PasswordPage implements OnInit {\r\n\r\n  public password: string;\r\n  public confirmPassword: string;\r\n  private errorMessage: string;\r\n  private newUser: User;\r\n  constructor(\r\n    private alert: AlertMessageService,\r\n    private storage: Storage,\r\n    private router: Router,\r\n    private auth: AuthenticationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    //if user returns back. remove any written password.\r\n    this.password = '';\r\n    this.confirmPassword = '';\r\n    //get data storage for this user\r\n    this.newUser = {}\r\n    this.storage.get('newUser').then((user) => {\r\n      console.log('user storage in storage:');\r\n      console.log(user);\r\n      this.newUser = user;\r\n    });\r\n  }\r\n\r\n  isPasswordPolicyMet() {\r\n    if (this.password.length < 8) {\r\n      this.errorMessage = \"The minimum password length is 8 characters!\"\r\n      return false;\r\n    }\r\n    this.errorMessage = '';\r\n    return true;\r\n  }\r\n\r\n  isPasswordConfirmed() {\r\n    this.errorMessage = \"Password doesn't match!\";\r\n    if (this.password == '' || this.password == undefined)\r\n      return false\r\n    if (this.confirmPassword == '' || this.password == undefined)\r\n      return false\r\n    if (this.confirmPassword != this.password) {\r\n      return false\r\n    }\r\n\r\n    this.errorMessage = '';\r\n    return true;\r\n  }\r\n\r\n  goToName() {\r\n    if (this.isPasswordPolicyMet() && this.isPasswordConfirmed()) {\r\n      //store info on storage\r\n      this.newUser.password = this.password;\r\n      this.storage.set('newUser', this.newUser);\r\n      //go to full name page\r\n      this.router.navigate(['/name-modal']);\r\n\r\n\r\n    }\r\n    else {\r\n      //alert user\r\n      this.alert.customMessage(this.errorMessage);\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}